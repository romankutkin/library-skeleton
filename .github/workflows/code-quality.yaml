name: Code Quality

on:
    push:
        branches:
            # TODO: change branch
            - feature/test-github-actions
    pull_request:
        branches:
            # TODO: change branch
            - feature/test-github-actions

jobs:
    code-quality:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php_version: [ "8.2", "8.3", "8.4" ]
        steps:
            -
                name: Checkout repository
                uses: actions/checkout@v4

            -
                name: Login to Private Docker Registry
                env:
                    DOCKER_REGISTRY_HOST: ${{ secrets.LARGE_SECRET_PASSPHRASE }}
                    DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
                    DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
                run: echo "$DOCKER_REGISTRY_PASSWORD" | docker login --username $DOCKER_REGISTRY_USERNAME --password-stdin $DOCKER_REGISTRY_HOST

            -
                name: Install Dependencies
                run: docker run --rm \
                    -v ${{ github.workspace }}:/srv/library \
                    -w /srv/library \
                    ${{ secrets.DOCKER_REGISTRY_HOST }}/library-name/php:${{ matrix.php_version }}-cli \
                    composer install --no-interaction

            -
                name: Run Test
                run: docker run --rm \
                    -v ${{ github.workspace }}:/srv/library \
                    -w /srv/library \
                    ${{ secrets.DOCKER_REGISTRY_HOST }}/library-name/php:${{ matrix.php_version }}-cli \
                    vendor/bin/phpunit

#    prepare-docker-image:
#        name: Prepare Docker Image
#        runs-on: ubuntu-latest
#        strategy:
#            matrix:
#                version:
#                    - 8.3
#                    - 8.4
#
#        steps:
#            -
#                name: Checkout Code
#                uses: actions/checkout@v4
#
#            -
#                name: Docker Build
#                run: docker image build --build-arg PHP_VERSION=${{ matrix.version }} --file $DOCKERFILE_PATH --tag $LIBRARY_NAME/php:${{ matrix.version }}-cli }} .
#
#    run-linter:
#        name: Run Linter
#        runs-on: ubuntu-latest
#        needs: prepare-docker-image
#        steps:
#            -
#                name: Run PHP-CS-Fixer
#                run: docker container run --interactive --tty --volume ./:$DOCKER_WORKDIR --workdir $DOCKER_WORKDIR $LIBRARY_NAME/php:${{ matrix.version }}-cli vendor/bin/phpstan analyse -l 10 src tests
#
#    run-static-analyze:
#        name: Run Static Analyze
#        runs-on: ubuntu-latest
#        needs: prepare-docker-image
#        steps:
#            -
#                name: Run PHPStan
#                run: docker container run --interactive --tty --volume ./:$DOCKER_WORKDIR --workdir $DOCKER_WORKDIR $LIBRARY_NAME/php:${{ matrix.version }}-cli
#
#    run-test:
#        name: Run Test
#        runs-on: ubuntu-latest
#        needs: prepare-docker-image
#        steps:
#            -
#                name: Run PHPUnit
#                run: docker container run --interactive --tty --volume ./:$DOCKER_WORKDIR --workdir $DOCKER_WORKDIR $LIBRARY_NAME/php:${{ matrix.version }}-cli

