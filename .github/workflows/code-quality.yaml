name: Code Quality

on:
    pull_request:
        types: [ opened, synchronize, reopened ]

jobs:
    run-composer-validate:
        name: Run Composer Validate
        runs-on: ubuntu-latest
        steps:
            -   name: Login in docker registry
                run: |
                    echo "${{ secrets.DOCKER_REGISTRY_PASSWORD }}" | docker login ${{ secrets.DOCKER_REGISTRY_HOST }} \
                        -u ${{ secrets.DOCKER_REGISTRY_USERNAME }} --password-stdin

            -   name: Pull docker image
                run: |
                    docker pull ${{ secrets.DOCKER_REGISTRY_HOST }}/library-name/php:8.4-cli

            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Validate Composer
                run: |
                    docker run --rm \
                        -v ${{ github.workspace }}:/srv/library \
                        -w /srv/library \
                        ${{ secrets.DOCKER_REGISTRY_HOST }}/library-name/php:8.4-cli \
                        composer validate

    run-analyze:
        name: Run Static Analyze
        runs-on: ubuntu-latest
        needs: [run-composer-validate]
        steps:
            -   name: Login in docker registry
                run: |
                    echo "${{ secrets.DOCKER_REGISTRY_PASSWORD }}" | docker login ${{ secrets.DOCKER_REGISTRY_HOST }} \
                        -u ${{ secrets.DOCKER_REGISTRY_USERNAME }} --password-stdin

            -   name: Pull docker image
                run: |
                    docker pull ${{ secrets.DOCKER_REGISTRY_HOST }}/library-name/php:8.4-cli

            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Install composer dependencies
                run: |
                    docker run --rm \
                        -v ${{ github.workspace }}:/srv/library \
                        -w /srv/library \
                        ${{ secrets.DOCKER_REGISTRY_HOST }}/library-name/php:8.4-cli \
                        composer install --no-interaction

            -   name: Run PHPStan
                run: |
                    docker run --rm \
                        -v ${{ github.workspace }}:/srv/library \
                        -w /srv/library \
                        ${{ secrets.DOCKER_REGISTRY_HOST }}/library-name/php:8.4-cli \
                        vendor/bin/phpstan analyze -l 10 src tests

    run-linter:
        name: Run Linter
        runs-on: ubuntu-latest
        needs: [run-composer-validate]
        steps:
            -   name: Login in docker registry
                run: |
                    echo "${{ secrets.DOCKER_REGISTRY_PASSWORD }}" | docker login ${{ secrets.DOCKER_REGISTRY_HOST }} \
                        -u ${{ secrets.DOCKER_REGISTRY_USERNAME }} --password-stdin

            -   name: Pull docker image
                run: |
                    docker pull ${{ secrets.DOCKER_REGISTRY_HOST }}/library-name/php:8.4-cli

            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Install composer dependencies
                run: |
                    docker run --rm \
                        -v ${{ github.workspace }}:/srv/library \
                        -w /srv/library \
                        ${{ secrets.DOCKER_REGISTRY_HOST }}/library-name/php:8.4-cli \
                        composer install --no-interaction

            -   name: Run PHPStan
                run: |
                    docker run --rm \
                        -v ${{ github.workspace }}:/srv/library \
                        -w /srv/library \
                        ${{ secrets.DOCKER_REGISTRY_HOST }}/library-name/php:8.4-cli \
                        vendor/bin/phpstan analyze -l 10 src tests

    run-test:
        name: Run Test
        runs-on: ubuntu-latest
        needs: [ run-composer-validate, run-analyze ]
        strategy:
            matrix:
                php_version: [ "8.3", "8.4" ]
        steps:
            -   name: Login in docker registry
                run: |
                    echo "${{ secrets.DOCKER_REGISTRY_PASSWORD }}" | docker login ${{ secrets.DOCKER_REGISTRY_HOST }} \
                        -u ${{ secrets.DOCKER_REGISTRY_USERNAME }} --password-stdin

            -   name: Pull docker image
                run: |
                    docker pull ${{ secrets.DOCKER_REGISTRY_HOST }}/library-name/php:${{ matrix.php_version }}-cli

            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Install composer dependencies
                run: |
                    docker run --rm \
                        -v ${{ github.workspace }}:/srv/library \
                        -w /srv/library \
                        ${{ secrets.DOCKER_REGISTRY_HOST }}/library-name/php:${{ matrix.php_version }}-cli \
                        composer install --no-interaction

            -   name: Run PHPUnit
                run: |
                    docker run --rm \
                        -v ${{ github.workspace }}:/srv/library \
                        -w /srv/library \
                        ${{ secrets.DOCKER_REGISTRY_HOST }}/library-name/php:${{ matrix.php_version }}-cli \
                        vendor/bin/phpunit
